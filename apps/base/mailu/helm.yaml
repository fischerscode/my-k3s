---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: mailu
spec:
  interval: 5m
  serviceAccountName: mailserver

  valuesFrom:
    - kind: Secret
      name: mailu-secrets
      valuesKey: SECRET_KEY
      targetPath: secretKey
    - kind: Secret
      name: mailu-secrets
      valuesKey: MYSQL_ROOT_PASSWORD
      targetPath: database.mysql.rootPassword
    - kind: Secret
      name: mailu-secrets
      valuesKey: MYSQL_MAILU_PASSWORD
      targetPath: database.mysql.password
    - kind: Secret
      name: mailu-secrets
      valuesKey: MYSQL_ROUNDCUBE_PASSWORD
      targetPath: database.mysql.roundcubePassword
    - kind: Secret
      name: mailu-secrets
      valuesKey: MESSAGE_RATELIMIT_EXEMPTION
      targetPath: mail.messageRatelimitExemption

  chart:
    spec:
      chart: mailu
      version: 0.4.2
      sourceRef:
        kind: HelmRepository
        name: mailu
      interval: 5m
  values:
    nameOverride: ""
    fullnameOverride: ""
    clusterDomain: ${NETWORK_K8S_CLUSTER_DOMAIN}

    nodeSelector: {}

    domain: ${MAILU_DOMAIN1}

    hostnames:
      - mail.${MAILU_DOMAIN1}
      - imap.${MAILU_DOMAIN1}
      - smtp.${MAILU_DOMAIN1}
      - mail.${MAILU_DOMAIN2}
      - imap.${MAILU_DOMAIN2}
      - smtp.${MAILU_DOMAIN2}
      - mail.${MAILU_DOMAIN3}
      - imap.${MAILU_DOMAIN3}
      - smtp.${MAILU_DOMAIN3}

    # Tolerations for pod assignment
    # Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: {}

    # Affinity for pod assignment
    # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

    database:
      type: mysql
      roundcubeType: mysql

      mysql:
        # settings for mailu (required if mailu database type is "mysql")
        database: mailu
        user: mailu

        roundcubeDatabase: roundcube
        roundcubeUser: roundcube

    external_relay: {}
    #    host: "[domain.tld]:port"
    #    username: username
    #    password: SECRET
    #    # username and password can also be stored as secret:
    #    secretName: external-relay-secret
    #    usernameKey: username
    #    passwordKey: password

    persistence:
      single_pvc: false

    subnet: ${NETWORK_K8S_CLUSTER_CIDR}

    mailuVersion: 1.9.21

    logLevel: NOTSET

    # local part of the postmaster email address (Mailu will use @$DOMAIN as domain part)
    postmaster: admin

    certmanager:
      enabled: true
      issuerType: ClusterIssuer
      issuerName: letsencrypt-prod
      # issuerName: selfsigned
      apiVersion: cert-manager.io/v1

    ingress:
      externalIngress: true
      deployIngress: false
      tlsFlavor: cert
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      realIpHeader: X-Forwarded-For
      realIpFrom: 0.0.0.0/0

    # Frontend load balancer for non-HTTP(s) services
    front:
      # logLevel: WARNING
      image:
        # repository: mailu/nginx
        # tag defaults to mailuVersion
        # tag: master
        repository: fischerscode/mailu-front
        tag: latest
      resources:
        requests:
          memory: 50Mi
          cpu: 50m
        limits:
          memory: 100Mi
          cpu: 100m
      hostPort:
        enabled: false
      externalService:
        enabled: false
        type: ClusterIP

    admin:
      # logLevel: WARNING
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        annotations:
          "helm.sh/resource-policy": keep
      resources:
        requests:
          memory: 200Mi
          cpu: 100m
        limits:
          memory: 400Mi
          cpu: 250m

    redis:
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        annotations:
          "helm.sh/resource-policy": keep
      resources:
        requests:
          memory: 20Mi
          cpu: 50m
        limits:
          memory: 100Mi
          cpu: 100m

    postfix:
      # logLevel: WARNING
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        annotations:
          "helm.sh/resource-policy": keep
      resources:
        requests:
          memory: 100Mi
          cpu: 50m
        limits:
          memory: 400Mi
          cpu: 200m

    dovecot:
      enabled: true
      # logLevel: WARNING
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        annotations:
          "helm.sh/resource-policy": keep
      resources:
        requests:
          memory: 100Mi
          cpu: 75m
        limits:
          memory: 250Mi
          cpu: 200m
      overrides:
        dovecot.conf: |
          doveadm_password = ${MAILU_DOVEADM_PASSWORD}
      # enable dovecot overrides
      # overrides:
      #   dovecot.conf: |
      #     # More info here: https://mailu.io/1.8/kubernetes/mailu/index.html#dovecot
      #     mail_nfs_index = yes
      #     mail_nfs_storage = yes
      #     mail_fsync = always
      #     mmap_disable = yes
      #     mail_max_userip_connections=100

    # rspamd and clamav must share their volume
    # use affinity to schedule both pods on the same node so RWO volumes keep working
    rspamd_clamav_persistence:
      size: 20Gi
      storageClass: ""
      accessMode: ReadWriteOnce
      claimNameOverride: ""
      annotations:
        "helm.sh/resource-policy": keep

    rspamd:
      # logLevel: WARNING
      resources:
        requests:
          memory: 150Mi
          cpu: 50m
        limits:
          memory: 250Mi # Set to 2000Mi for first start
          cpu: 100m

    clamav:
      enabled: false

    roundcube:
      enabled: true
      # logLevel: WARNING
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        annotations:
          "helm.sh/resource-policy": keep
      uri: /roundcube
      resources:
        requests:
          memory: 120Mi
          cpu: 50m
        limits:
          memory: 200Mi
          cpu: 150m

    webdav:
      enabled: false

    mysql:
      image:
        repository: library/mariadb
        tag: 10.4.10
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        annotations:
          "helm.sh/resource-policy": keep
      resources:
        requests:
          memory: 200Mi
          cpu: 50m
        limits:
          memory: 400Mi
          cpu: 150m

    fetchmail:
      enabled: false
      # logLevel: WARNING
      persistence:
        size: 20Gi
        storageClass: ""
        accessMode: ReadWriteOnce
        claimNameOverride: ""
        #annotations:
        #  "helm.sh/resource-policy": keep
      resources:
        requests:
          memory: 100Mi
          cpu: 100m
        limits:
          memory: 200Mi
          cpu: 200m
      delay: 600

    unbound:
      enabled: true
      clusterDNS: ${NETWORK_K8S_CLUSTER_DNS}
      # The ClusterIP, the unbound service takes.
      # Choose an unclaimed one, that lays in your service CIDR
      # (kubectl cluster-info dump | grep -m 1 service-cluster-ip-range).
      unboundServiceIP: 10.43.162.135
      image:
        repository: mvance/unbound@sha256
        tag: 4ee6b8686952e4eee3397f661fea174b000be6bf3c5e6b560a25fa61276829ed
      resources:
        requests:
          memory: 50Mi
          cpu: 10m
        limits:
          memory: 100Mi
          cpu: 50m
